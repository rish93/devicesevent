spring.application.name=devicesevent

spring.jpa.show-sql = true
spring.datasource.url: jdbc:postgresql://localhost:5432/DeviceApp_Tenants
spring.datasource.username: postgres
spring.datasource.password: root
spring.driverClassName: org.postgresql.Driver

#kafka consumer
spring.kafka.consumer.bootstrap-servers: localhost:9092
#specifies a unique string that identifies the consumer group this consumer belongs to.
spring.kafka.consumer.group-id: group-id
#Setting "auto.offset.reset" to "earliest" instructs consumers to begin reading from the earliest available offset in each topic partition. In other words, consumers will process messages from the very beginning of the log.
spring.kafka.consumer.auto-offset-reset: earliest

spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

logging.level.org.apache.kafka= INFO
  #DEBUG

#sqs

spring.cloud.aws.region.static=us-east-1
spring.cloud.aws.region.auto=false
spring.cloud.aws.credentials.access-key=AKIAXERSRFJAMPXQWWP6
spring.cloud.aws.credentials.secret-key=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
spring.cloud.aws.endpoint=https://sqs.us-east-1.amazonaws.com/490805996096/device-aws-queue
#device.queue.name=device-aws-queue


# Get Rid of the OIV Warning:
spring.jpa.open-in-view=false
# Show the SQL Statements fired by JPA:
# Set sane Spring Hibernate properties:
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Prevent JPA from trying to Initialize...:
spring.jpa.database=postgresql
# ... and do not Auto-Detect the Database:
spring.datasource.initialize=false
# Prevent Hibernate from Automatic Changes to the DDL Schema:
spring.jpa.hibernate.ddl-auto=none
